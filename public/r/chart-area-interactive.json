{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "chart-area-interactive",
  "type": "registry:component",
  "title": "Interactive Area Chart",
  "description": "An interactive area chart component.",
  "dependencies": [
    "recharts"
  ],
  "files": [
    {
      "path": "registry/new-york/chart-area-interactive/chart-area-interactive.tsx",
      "content": "\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { Area, AreaChart, CartesianGrid, XAxis } from \"recharts\"\r\n\r\nimport {\r\n  Card,\r\n  CardAction,\r\n  CardContent,\r\n  CardDescription,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/components/ui/card\"\r\nimport {\r\n  ChartConfig,\r\n  ChartContainer,\r\n  ChartTooltip,\r\n  ChartTooltipContent,\r\n} from \"@/components/ui/chart\"\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from \"@/components/ui/select\"\r\nimport {\r\n  ToggleGroup,\r\n  ToggleGroupItem,\r\n} from \"@/components/ui/toggle-group\"\r\n\r\nconst chartData = [\r\n  { date: \"2024-04-01\", desktop: 222, mobile: 150 },\r\n  { date: \"2024-04-02\", desktop: 97, mobile: 180 },\r\n  { date: \"2024-04-03\", desktop: 167, mobile: 120 },\r\n  { date: \"2024-04-04\", desktop: 242, mobile: 260 },\r\n  { date: \"2024-04-05\", desktop: 373, mobile: 290 },\r\n  { date: \"2024-04-06\", desktop: 301, mobile: 340 },\r\n  { date: \"2024-04-07\", desktop: 245, mobile: 180 },\r\n  { date: \"2024-04-08\", desktop: 409, mobile: 320 },\r\n  { date: \"2024-04-09\", desktop: 59, mobile: 110 },\r\n  { date: \"2024-04-10\", desktop: 261, mobile: 190 },\r\n  { date: \"2024-04-11\", desktop: 327, mobile: 350 },\r\n  { date: \"2024-04-12\", desktop: 292, mobile: 210 },\r\n  { date: \"2024-04-13\", desktop: 342, mobile: 380 },\r\n  { date: \"2024-04-14\", desktop: 137, mobile: 220 },\r\n  { date: \"2024-04-15\", desktop: 120, mobile: 170 },\r\n  { date: \"2024-04-16\", desktop: 138, mobile: 190 },\r\n  { date: \"2024-04-17\", desktop: 446, mobile: 360 },\r\n  { date: \"2024-04-18\", desktop: 364, mobile: 410 },\r\n  { date: \"2024-04-19\", desktop: 243, mobile: 180 },\r\n  { date: \"2024-04-20\", desktop: 89, mobile: 150 },\r\n  { date: \"2024-06-30\", desktop: 446, mobile: 400 },\r\n]\r\n\r\nconst chartConfig = {\r\n  visitors: {\r\n    label: \"Visitors\",\r\n  },\r\n  desktop: {\r\n    label: \"Desktop\",\r\n    color: \"var(--primary)\",\r\n  },\r\n  mobile: {\r\n    label: \"Mobile\",\r\n    color: \"var(--primary)\",\r\n  },\r\n} satisfies ChartConfig\r\n\r\nexport function ChartAreaInteractive() {\r\n  const [timeRange, setTimeRange] = React.useState(\"90d\")\r\n\r\n  const filteredData = chartData.filter((item) => {\r\n    const date = new Date(item.date)\r\n    const referenceDate = new Date(\"2024-06-30\")\r\n    let daysToSubtract = 90\r\n    if (timeRange === \"30d\") {\r\n      daysToSubtract = 30\r\n    } else if (timeRange === \"7d\") {\r\n      daysToSubtract = 7\r\n    }\r\n    const startDate = new Date(referenceDate)\r\n    startDate.setDate(startDate.getDate() - daysToSubtract)\r\n    return date >= startDate\r\n  })\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle>Total Visitors</CardTitle>\r\n        <CardDescription>\r\n          Total for the last 3 months\r\n        </CardDescription>\r\n        <CardAction>\r\n          <ToggleGroup\r\n            type=\"single\"\r\n            value={timeRange}\r\n            onValueChange={setTimeRange}\r\n            variant=\"outline\"\r\n          >\r\n            <ToggleGroupItem value=\"90d\">Last 3 months</ToggleGroupItem>\r\n            <ToggleGroupItem value=\"30d\">Last 30 days</ToggleGroupItem>\r\n            <ToggleGroupItem value=\"7d\">Last 7 days</ToggleGroupItem>\r\n          </ToggleGroup>\r\n        </CardAction>\r\n      </CardHeader>\r\n      <CardContent className=\"px-2 sm:p-6\">\r\n        <ChartContainer\r\n          config={chartConfig}\r\n          className=\"aspect-auto h-[250px] w-full\"\r\n        >\r\n          <AreaChart\r\n            accessibilityLayer\r\n            data={filteredData}\r\n            margin={{\r\n              left: 12,\r\n              right: 12,\r\n            }}\r\n          >\r\n            <CartesianGrid vertical={false} />\r\n            <XAxis\r\n              dataKey=\"date\"\r\n              tickLine={false}\r\n              axisLine={false}\r\n              tickMargin={8}\r\n              minTickGap={32}\r\n              tickFormatter={(value) => {\r\n                const date = new Date(value)\r\n                return date.toLocaleDateString(\"en-US\", {\r\n                  month: \"short\",\r\n                  day: \"numeric\",\r\n                })\r\n              }}\r\n            />\r\n            <ChartTooltip\r\n              cursor={false}\r\n              content={<ChartTooltipContent indicator=\"dot\" />}\r\n            />\r\n            <Area\r\n              dataKey=\"mobile\"\r\n              type=\"natural\"\r\n              fill=\"var(--color-mobile)\"\r\n              fillOpacity={0.4}\r\n              stroke=\"var(--color-mobile)\"\r\n              stackId=\"a\"\r\n            />\r\n            <Area\r\n              dataKey=\"desktop\"\r\n              type=\"natural\"\r\n              fill=\"var(--color-desktop)\"\r\n              fillOpacity={0.4}\r\n              stroke=\"var(--color-desktop)\"\r\n              stackId=\"a\"\r\n            />\r\n          </AreaChart>\r\n        </ChartContainer>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n} ",
      "type": "registry:component"
    }
  ]
}